name: Deploy Jekyll site to Pages
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Convert uploaded DOCX into Jekyll posts (Tropical Updates)
      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Prepare folders
        run: |
          mkdir -p _posts assets/docs incoming/posts

            - name: Convert incoming/posts/*.docx to _posts
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob

          files=(incoming/posts/*.docx)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No DOCX posts found."
            exit 0
          fi

          for f in "${files[@]}"; do
            base="$(basename "$f" .docx)"  # expect YYYY-MM-DD-slug.docx
            if [[ ! "$base" =~ ^([0-9]{4})-([0-9]{2})-([0-9]{2})-(.+)$ ]]; then
              echo "Skipping $f: filename must follow YYYY-MM-DD-slug.docx" >&2
              continue
            fi

            yyyy="${BASH_REMATCH[1]}"
            mm="${BASH_REMATCH[2]}"
            dd="${BASH_REMATCH[3]}"
            slug="${BASH_REMATCH[4]}"
            date="$yyyy-$mm-$dd"
            title="$(echo "$slug" | tr '-' ' ' | sed 's/\b\(.\)/\u\1/g')"

            mkdir -p "assets/docs/$slug"
            pandoc "$f" -t html5 -o "/tmp/$slug.html" --extract-media="assets/docs/$slug" --wrap=none

            # IMPORTANT: normalize both forms to Liquid + baseurl
            #   - src="media/xxx"                       (Pandoc variant 1)
            #   - src="assets/docs/$slug/media/xxx"    (Pandoc variant 2)
            sed -E "s#src=\"(assets/docs/$slug/)?media/([^\"]*)\"#src=\"{{ '/assets/docs/$slug/media/\2' | relative_url }}\"#g" \
              "/tmp/$slug.html" > "/tmp/$slug.body.html"

            out="_posts/$date-$slug.html"
            {
              echo '---'
              echo 'layout: default'
              echo "title: \"$title\""
              echo "date: $date"
              echo '---'
              cat "/tmp/$slug.body.html"
            } > "$out"
          done


      - name: Build Jekyll site
        uses: actions/jekyll-build-pages@v1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
